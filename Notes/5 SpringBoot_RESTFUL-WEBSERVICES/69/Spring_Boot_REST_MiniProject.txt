				Date : 05/12/2020
				Spring Boot 7AM
				  Mr. RAGHU
				---------------
TASK:
  https://www.youtube.com/c/NareshIT/search?query=error%20raghu

			  --------------------------------
			   Spring Boot REST Mini Project

Layers
1) DAL - Data Access Layer

a) Model class
b) Repository Interface

2) SL- Service Layer

a) Service Interface
b) service Impl class
c) Custom Exception

3) IL - Integration Layer

a) RestController
b) RestControllerAdvice
  (Exception Handling)

------------------------------------

var id=10;
var code='ABC';
var status=false;
var  ob = {sid:10,sname:'A'};

let
const

sysout(10/3);
sysout(10.0/3);

-------------code-------------------
Name : SpringBoot2RestCrudApp
Dep  : Web, Lombok, DevTools, MySQL, Data Jpa

*) application.properties
server.port=9898

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/boot7am
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

a) Model class
package in.nareshit.raghu.model;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;

import lombok.Data;

@Data
@Entity
public class Product {
	@Id
	@GeneratedValue
	private Integer prodId;
	
	private String prodCode;
	private Double prodCost;
	
	private Double prodGst;
	private Double prodDisc;
	
}

b) Repository Interface
package in.nareshit.raghu.repo;

import org.springframework.data.jpa.repository.JpaRepository;

import in.nareshit.raghu.model.Product;

public interface ProductRepository 
	extends JpaRepository<Product, Integer> {

}


c) Service Interface
package in.nareshit.raghu.service;

import java.util.List;

import in.nareshit.raghu.model.Product;

public interface IProductService {

	Integer saveProduct(Product p);
	List<Product> getAllProducts();
		
}

d) ServiceImpl
package in.nareshit.raghu.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import in.nareshit.raghu.model.Product;
import in.nareshit.raghu.repo.ProductRepository;
import in.nareshit.raghu.service.IProductService;

@Service
public class ProductServiceImpl implements IProductService {
	@Autowired
	private ProductRepository repo;
	
	@Override
	public Integer saveProduct(Product p) {
		//JDK 10 : local variable type inference
		//Best DataType is selected by Java compiler
		var cost = p.getProdCost();
		
		var gst = cost * 12.0/100;
		var disc = cost * 20.0/100;
		
		p.setProdGst(gst);
		p.setProdDisc(disc);
		
		p = repo.save(p);
		
		return p.getProdId();
	}

	@Override
	public List<Product> getAllProducts() {
		List<Product> list =  repo.findAll();
		return list;
	}

}

e) RestController

package in.nareshit.raghu.rest;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import in.nareshit.raghu.model.Product;
import in.nareshit.raghu.service.IProductService;

@RestController
@RequestMapping("/products")
public class ProductRestController {
	
	@Autowired
	private IProductService service;
	
	@PostMapping
	public ResponseEntity<String> saveProduct(
			@RequestBody Product product)
	{
		Integer id =  service.saveProduct(product);
		
		return new ResponseEntity<String>("Product saved "+id,HttpStatus.OK);
	}
	
	@GetMapping
	public ResponseEntity<List<Product>> getAllProducts() {
		
		List<Product> list =  service.getAllProducts();
		
		return new ResponseEntity<List<Product>>(list,HttpStatus.OK);
	}
	
	
}


----------------POSTMAN------------------------------
POST  http://localhost:9898/products  SEND
          Body
------------------------------------------------------
	      (*) raw    [JSON]
------------------------------------------------------
{
    "prodCode" : "PEN",
    "prodCost" : 100.0
}
------------------------------------------------------

----------------POSTMAN-------------------------------
GET     http://localhost:9898/products    SEND
------------------------------------------------------


OJDBC :
<dependency>
    <groupId>com.jslsolucoes</groupId>
    <artifactId>ojdbc6</artifactId>
    <version>11.2.0.1.0</version>
</dependency>
