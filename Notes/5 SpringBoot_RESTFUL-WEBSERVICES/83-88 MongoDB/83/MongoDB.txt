				Date : 22/12/2020
				Spring Boot 7AM
				   Mr. RAGHU
				----------------
Spring Boot Multiple Databses:
https://www.youtube.com/watch?v=nzszxQbQ5WU

========================================================================
			   MongoDb Setup

Step#1
Download Link:
https://www.mongodb.com/try/download/community

Choose Details:
Version : 3.6
Platform : Windows
Package  : MSI

Click on Download

=> Double click => Next > Next > Finish
*** Do not Install Mongo Compass (uncheck Checkbox)
---------------------
Step#2 Set MongoDB Path

S#1 Copy MongoDB Path
 C:\Program Files\MongoDB\Server\3.6\bin
S#2 Set Path in Environment Variables
> My Computer > Right click > choose properties
> Advanced System Setings > Goto Advanced Option
> Click on Environment Variable > Goto System variables
> edit PATH variable > add above MongoDB Path at starting
> Click OK > Ok > Finish

----------------------------
Step#3 Commands
Start MongoDb Server

cmd> mongod

Start MongoDb Client

cmd> mongo

======================================================================
			Basic Mongo Commands

#1. View all Database
> show databases

#2. Use/Goto Database
> use sample
(if it not exist, it is created)

#3. View Collections(similer to tables)
> show collections

#4. Insert Data
> db.collectionName.insert({JSON FORMAT})

> db.student.insert({"empId":10,"empName":"SAM","empSal":3.3});

#5. View/Print Data

db.student.find();
> db.student.find().pretty();
-----------------------------------------------------------------------------


			     Spring Boot - MongoDB(NoSQL)
			  [spring-boot-starter-data-mongodb]

=> Mongodb supports distributed database where as oracle supports relational database.
 * Mongodb supports horrizontal scaling where as oracle supports vertical scaling.

=> 3 Types of MongoDB Setup supported by Spring Boot.
 a) Embedded MongoDB (Dev/Testing Purpose)
 b) External MongoDB ( Web/Web service support)
 c) External MongoDB with Reactive Support

=> Spring boot has provided API for MongoDB Operations.
   We need to create one interface by using MongoRepository<T,ID>.

=> Default PrimaryKey DataType (recomanded ) is : String.
   Value is generated by MongoDB as HexaDecimal Value.

=> To create a connection between Spring Boot App and MongoDB,
   First start MongoDB Server (mongod) and then provide below
   properties
        spring.data.mongodb.host=localhost
	spring.data.mongodb.port=27017
	spring.data.mongodb.database=nit

=> If given database not exist, then new Database is created.

..(note)..
a) At Model class level apply annotation @Document that makes our class
   connected to one class and supports objects conversion as JSON Documents.

b) At Variable level , provide @Id that indicates PrimaryKey.
   If Type is String, then MongoDB Auto generate Hexa Decimal Value
   for insert/save operation.

-----------------------Code----------------------------------
#1. Create Spring Starter Project
Name : SpringBoot2MongoDbFirstEx
Dep  : MongoDb, Lombok

#2. Model class
package in.nareshit.raghu.model;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;

@Data
@NoArgsConstructor
@RequiredArgsConstructor
@Document //Map with Collection-Documents
@Document(collection="table_name")
public class Student {

	@Id //PrimaryKey
	private String id;
	
	@NonNull
	private Integer sid;
	@NonNull
	private String sname;
	@NonNull
	private Double sfee;
	
}

#3. Repository Interface
package in.nareshit.raghu.repo;

import org.springframework.data.mongodb.repository.MongoRepository;

import in.nareshit.raghu.model.Student;

public interface StudentRepository
	extends MongoRepository<Student, String>
{
	// findBy ..method
	// @Query 
}

#4. Runner class
package in.nareshit.raghu.runner;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

import in.nareshit.raghu.model.Student;
import in.nareshit.raghu.repo.StudentRepository;

@Component
public class StudentDataRunner implements CommandLineRunner {

	@Autowired
	private StudentRepository repo;
	
	public void run(String... args) throws Exception {
		Student s1 = repo.save(new Student(101, "A", 2.3));
		repo.save(new Student(102, "B", 4.3));
		repo.save(new Student(103, "C", 8.6));
		repo.save(new Student(104, "D", 5.9));
		
		System.out.println("PrimaryKey => " + s1.getId());
		
		System.out.println("---------------------");
		
		repo.findAll().forEach(System.out::println);;
		
		
	}

}

#5. application.properties
#host:local,port:27017,database(test)
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=nit


#6. Execution
cmd> mongod
Then Run our starter class
cmd> mongo
Follow belw commands
> use nit
> show collections
> db.student.find().pretty();


--------Unable to work with External Database--------------------
S#1 Create new Spring Boot Starter Project with Embedded Spring MongoDB Database
                --or--
   add below dependency in existed project
 <dependency>
	<groupId>de.flapdoodle.embed</groupId>
	<artifactId>de.flapdoodle.embed.mongo</artifactId>
	<!-- <scope>test</scope> -->
 </dependency>

S#2 Remove keys in properties file.

Note: If we dont have any external database then we have to choose Embedded mongodb Database

-------------------------------------------------
*) Access Denied with Drive?
A) Drive Permission, (install in D/E Drive)

*) Installtion problem
A) Download and Install latest n/w drivers
   also good anti-virus.

Then uninstall old one and install new one.
--------------------------------------------