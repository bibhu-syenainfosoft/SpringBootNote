				Date : 05/11/2020
				Spring Boot 7AM
				   Mr. RAGHU
				-----------------
https://www.youtube.com/c/NareshIT/search?query=Error%20in%20Spring%20boot

https://www.youtube.com/watch?v=HwwF4pvYWws

https://www.youtube.com/c/NareshIT/search?query=camel

=> Here, DispatcherServlet is a pre-defined class.
   When ever any request is made then here doDispatch() method is called.
      DispatcherServlet#doDispatch() 

=> It will read HandlerMapping to get Controller details
   and uses ViewResolver Help to find out ViewPage(UI).

=> Pre-defined classes : ctrl+shift+T  (open type) Enter full or partial name > double click on matching
=> Programmer -defined class : ctrl+shift+R (open resource)

=> Manual configuration is required for DispatcherServlet with details like
   Base-package, properties file, Database/ORM/JPA/Email/Security....configuration..etc

---Example code--
1.

package in.nit;

import org.springframework.context.annotation.Configuration;

@Configuration
public class DbConfig {

	//DataSource
	//SessionFactory
}


2.
package in.nit;

import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.PropertySource;

@Configuration
@ComponentScan("in.nit")
@PropertySource("classpath:app.properties")
public class AppConfig {

	@Bean
	public InternalResourceViewResolver viewResolver() {
		return new InternalResourceViewResolver("/WEB-INF/pages/", ".jsp");
	}
}


3.
package in.nit;

import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;

public class AppInit extends AbstractAnnotationConfigDispatcherServletInitializer{

	@Override
	protected Class<?>[] getRootConfigClasses() {
		return new Class[] {DbConfig.class};
	}

	@Override
	protected Class<?>[] getServletConfigClasses() {
		return new Class[] {AppConfig.class};
	}

	@Override
	protected String[] getServletMappings() {
		return new String[] {"/"};
	}

}
-----------------------------------------------------------------------------
*) Common HTTP Status Codes:
a. Http Status : 200 (OK) 
  If request is processed by controller without any exception and response given to
  browser properly then it is Success-200(OK).

b. Http Status: 404 (NOT FOUND)
=> URL is case-sensitive (ie /show, /SHOW, /Show ... are different).
  If Request URL is not matched with any Controller method, then FC returns
  Http Staus 404 (NOT FOUND)

c. ***Http Status: 405 (Method Not Allowed)
  If Request URL is matched and Http Method type is not matched, then FC returns
  Http Status :405 Method Not allowed.

ex: Request: /show, GET but code has /show with POST type.

d. Http Status : 500 (INTERNAL SERVER ERROR)
  If request URL is matching and FC is executing controller method,
  then Controller#method is thowing exception, in that case FC returns 
  Http Status 500 : INTERNAL SERVER ERROR.

-------------Controller code------------------------
package in.nareshit.raghu.controller;

import java.util.Random;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
public class StudentController {
	
	@RequestMapping("/sample")//GET
	public String showData() {
		
		return "DataPage";
	}
	
	@RequestMapping(value = "/find",method = RequestMethod.POST)
	public String findData() {
		
		return "Home";
	}
	
	@RequestMapping("/showa")//GET
	public String showDataA() {
		if(new Random().nextInt(10)<11) {
			throw new RuntimeException("DUMMY");
		}
		
		return "Home";
	}
}

*) application.properties
server.port=9898
spring.mvc.view.prefix=/WEB-INF/pages/
spring.mvc.view.suffix=.jsp

*)pom.xml
<dependency>
   <groupId>org.apache.tomcat.embed</groupId>
   <artifactId>tomcat-embed-jasper</artifactId>
</dependency>

*) Create File: Home.jsp , DO NOT CREATE FILE : DataPage

=> Enter URLs as given below
a) http://localhost:9898/sample   -> 404 (Page is not exist)
b) http://localhost:9898/test     -> 404 (URL not Exist)
c) http://localhost:9898/SHOWA    -> 404 (URL not Exist/URL case-sensitive)
d) http://localhost:9898/find     -> 405 (Method Not allowed)
e) http://localhost:9898/showa    -> 500 (Internal Server Error)

=========================Ex case====================================================
If we enter URL: /show (GET) in browser, display---> HomePage.jsp

HomePage.jsp Should contain one Link and HTML Form
On click Link : View All , make Request: /view (GET), that should display: DataPage.jsp

On click Form Submit, make Request: /register (POST), should display: SuccessPage.jsp

--code---
1. Controller class

package in.nareshit.raghu.controllr;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
public class ProductCotroller {

	/***
	 * If we enter URL: /show (GET) in browser, 
	 * display---> HomePage.jsp
	 */
	
	//@RequestMapping("/show") //GET
	@RequestMapping(value = "/show", method = RequestMethod.GET) //GET
	public String showHome() {
		return "HomePage";
	}
	
	/**
	 * On click Link : View All , 
	 * make Request: /view (GET), 
	 * that should display: DataPage.jsp
	 */
	@RequestMapping("/view") //GET
	public String getAll() {
		return "DataPage";
	}
	
	/**
	 * On click Form Submit, 
	 * make Request: /register (POST), 
	 * should display: SuccessPage.jsp 
	 */
	@RequestMapping(value = "/register",method = RequestMethod.POST)
	public String addProduct()  {
		return "SuccessPage";
	}
	
	
}

2. UIPages

a) HomePage.jsp
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
<h3>WELCOME TO HOME PAGE</h3>

<a href="view"> VIEW ALL </a>

<hr/>

<form action="register" method="POST">
	<input type="submit" value="Register"/>
</form>
</body>
</html>
-------------------
b)DataPage.jsp
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
<h3>WELCOME TO DATA PAGE (VIEW+GET)</h3>
</body>
</html>
-------------
c) SuccessPage.jsp
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
 <H3>WELCOME TO SUCCESS PAGE (FORM SUBMIT + /register + POST)</H3>
</body>
</html>
